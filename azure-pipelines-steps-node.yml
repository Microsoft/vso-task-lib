parameters: 
- name: os
  type: string

steps:
- task: NodeTool@0
  displayName: use node $(nodeVersion)
  inputs:
    versionSpec: $(nodeVersion)

- script: npm install
  displayName: (task-lib) npm install
  workingDirectory: node

- script: npm test
  workingDirectory: node
  displayName: (task-lib) npm test

# Only on Linux. For CI runs on master, automatically publish packages
- ${{ if eq(parameters.os, 'Linux') }}:
  - bash: |
      echo //registry.npmjs.org/:_authToken=\${NPM_TOKEN} > .npmrc
      npm publish || true # Ignore publish failures, usually will happen because package already exists
    displayName: (task-lib) npm publish
    workingDirectory: node/_build
    condition: and(succeeded(), in(variables['build.reason'], 'IndividualCI', 'BatchedCI', 'Manual'), in(variables['build.sourcebranch'], 'refs/heads/master'))
    env:
      NPM_TOKEN: $(npm-automation.token)

  # PublishPipelineArtifact step is configured in the base template.
  # See the templateContext section in the azure-pipelines.yml file

# Only on Windows. Build VstsTaskSdk for powershell 
- ${{ if eq(parameters.os, 'Windows_NT') }}:
  # Build step for .NET source code. 
  - task: DotNetCoreCLI@2
    displayName: 'Build .NET project(s)'
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration Release'

  - script: npm install
    displayName: (VstsTaskSdk) npm install
    workingDirectory: powershell

  - script: npm test
    displayName: (VstsTaskSdk) npm test
    workingDirectory: powershell
